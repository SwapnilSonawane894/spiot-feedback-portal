generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- CORE AUTH MODELS ---
enum UserRole {
  ADMIN
  HOD
  STAFF
  STUDENT
}

model User {
  id             String        @id @default(cuid())
  name           String?
  email          String?       @unique
  hashedPassword String?
  role           UserRole      @default(STUDENT)
  
  // A student is linked to a department and an academic year
  departmentId   String?
  department     Department?   @relation(fields: [departmentId], references: [id])
  academicYearId String?
  academicYear   AcademicYear? @relation(fields: [academicYearId], references: [id])
  
  // Relations
  staffProfile      Staff?
  submittedFeedback Feedback[]
  accounts          Account[]
  sessions          Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// --- INSTITUTE STRUCTURE MODELS ---

model AcademicYear {
  id           String    @id @default(cuid())
  name         String    @unique // e.g., "Second Year Computer Engineering"
  abbreviation String    @unique // e.g., "SYCO"
  
  // Relations
  students     User[]
  subjects     Subject[]
}

model Department {
  id           String @id @default(cuid())
  name         String @unique // e.g., "Computer Engineering"
  abbreviation String @unique // e.g., "CO"
  
  // Relations
  staff    Staff[]
  students User[]
  hod      Staff?    @relation("HODOfDepartment", fields: [hodId], references: [id])
  hodId    String?   @unique
  
  // Whether the feedback submission window is active for this department
  isFeedbackActive Boolean @default(false)
}

model Staff {
  id           String @id @default(cuid())
  userId       String @unique
  user         User   @relation(fields: [userId], references: [id])
  
  departmentId String
  department   Department @relation(fields: [departmentId], references: [id])
  
  managedDepartment Department? @relation("HODOfDepartment")
  assignments       FacultyAssignment[]
  
  // HOD-provided suggestions for faculty reports
  hodSuggestions HodSuggestion[]
}

model HodSuggestion {
  id         String   @id @default(cuid())
  staffId    String
  staff      Staff    @relation(fields: [staffId], references: [id])
  semester   String
  content    String   @db.Text
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([staffId, semester])
}

model Subject {
  id           String @id @default(cuid())
  name         String
  subjectCode  String @unique
  
  // A subject belongs to a specific academic year (e.g., SYCO)
  academicYearId String
  academicYear   AcademicYear @relation(fields: [academicYearId], references: [id])
  
  // Relations
  assignments  FacultyAssignment[]
}

// --- FEEDBACK CORE MODELS ---

model FacultyAssignment {
  id        String   @id @default(cuid())
  semester  String   // e.g., "Odd 2025-26"
  staffId   String
  staff     Staff    @relation(fields: [staffId], references: [id])
  
  subjectId String
  subject   Subject  @relation(fields: [subjectId], references: [id])
  
  feedbacks Feedback[]
  @@unique([semester, staffId, subjectId])
}

model Feedback {
  id          String   @id @default(cuid())
  studentId   String
  student     User     @relation(fields: [studentId], references: [id])
  
  assignmentId String
  assignment  FacultyAssignment @relation(fields: [assignmentId], references: [id])
  
  createdAt   DateTime @default(now())
  
  // The 16 Official Feedback Parameters
  coverage_of_syllabus                     Int
  covering_relevant_topics_beyond_syllabus Int
  effectiveness_technical_contents         Int
  effectiveness_communication_skills       Int
  effectiveness_teaching_aids              Int
  motivation_self_learning                 Int
  support_practical_performance            Int
  support_project_seminar                  Int
  feedback_on_student_progress             Int
  punctuality_and_discipline               Int
  domain_knowledge                         Int
  interaction_with_students                Int
  ability_to_resolve_difficulties          Int
  encourage_cocurricular                   Int
  encourage_extracurricular                Int
  guidance_during_internship               Int
  
  // Whether this feedback has been released to the faculty by the HOD
  isReleased                              Boolean  @default(false)
  // Optional text field for student suggestions/comments
  any_suggestion                          String?
}
